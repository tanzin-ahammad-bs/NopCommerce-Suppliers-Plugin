@model IEnumerable<SelectedProductModel>

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewBag.PageTitle = T("Admin.Catalog.Products.AddProducts").Text;
    NopHtml.SetActiveMenuItemSystemName("Suppliers");

    var supplierId = ViewBag.SupplierId ?? 0;
    var supplierName = ViewBag.SupplierName ?? "";
    var allSuppliers = ViewBag.AllSuppliers as List<SelectListItem>;
}

<style>
    .table th, .table td {
        text-align: center !important;
        vertical-align: middle !important;
    }

    .form-group label {
        font-weight: bold;
    }
</style>

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Catalog.Products.SelectProductsForSupplier")
    </h1>
    <div class="float-right">
        <a class="btn btn-secondary" href="@Url.Action("PurchaseList", "PurchaseOrder")">
            <i class="fas fa-arrow-left"></i> @T("Admin.Common.BackToList")
        </a>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="card card-default">
                <div class="card-header">
                    <h3 class="card-title">@T("Admin.Catalog.Products.AddProducts")</h3>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label class="col-form-label col-md-2">@T("Admin.Common.Supplier")</label>
                        <div class="col-md-6">
                            @Html.DropDownList("SupplierId", allSuppliers, "-- Select Supplier --", new
                                {
                                    @class = "form-control select2",
                                    id = "supplierDropdown",
                                    style = "width: 100%; font-size: 18px; padding: 10px;"
                                })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6 offset-md-2">
                            <button type="button" id="addProductsButton" class="btn btn-primary">
                                <i class="fas fa-plus"></i> @T("Admin.Common.Add").Text
                            </button>
                        </div>
                    </div>

                    <table class="table table-bordered table-striped table-hover">
                        <thead>
                            <tr>
                                <th>@T("Admin.Catalog.Products.Name")</th>
                                <th>@T("Admin.Catalog.Products.SKU")</th>
                                <th>@T("Admin.Catalog.Products.CurrentStock")</th>
                                <th>@T("Admin.Catalog.Products.QuantityToOrder")</th>
                                <th>@T("Admin.Catalog.Products.UnitCost")</th>
                                <th>@T("Admin.Catalog.Products.LineTotal")</th>
                                <th>@T("Admin.Common.Actions")</th>
                            </tr>
                        </thead>
                        <tbody id="productsTableBody">
                            @foreach (var product in Model)
                            {
                                <tr data-product-id="@product.ProductId">
                                    <td>@product.ProductName</td>
                                    <td>@product.SKU</td>
                                    <td>@product.CurrentStock</td>
                                    <td>
                                        <input type="number" class="form-control quantity-input" value="@product.QuantityToOrder"
                                               onchange="updateLineTotal(this)" data-product-id="@product.ProductId" />
                                    </td>
                                    <td>
                                        <input type="number" class="form-control unitcost-input" value="@product.UnitCost"
                                               onchange="updateLineTotal(this)" data-product-id="@product.ProductId" />
                                    </td>
                                    <td>
                                        <span id="lineTotal-@product.ProductId">@product.LineTotal.ToString("F2")</span>
                                    </td>
                                    <td>
                                        <button class="btn btn-primary btn-sm" onclick="editProduct(@product.ProductId)">
                                            @T("Admin.Common.Update").Text
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteProduct(@product.ProductId)">
                                            @T("Admin.Common.Delete").Text
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="form-group mt-4 text-center">
                        <button class="btn btn-success" id="saveCentralPurchaseOrder">
                            <i class="fas fa-save"></i> @T("Admin.Common.Save").Text
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

<script>
    $(document).ready(function () {
        $('#supplierDropdown').select2({
            placeholder: "-- Select Supplier --",
            allowClear: true
        });

        $('#supplierDropdown').change(function () {
            const selectedId = $(this).val();
            if (selectedId) {
                window.location.href = '@Url.Action("AddProducts", "PurchaseOrder")' + '?id=' + selectedId;
            }
        });
    });

    function updateLineTotal(input) {
        const $row = $(input).closest('tr');
        const productId = $(input).data('product-id');
        const quantity = parseFloat($row.find('.quantity-input').val()) || 0;
        const unitCost = parseFloat($row.find('.unitcost-input').val()) || 0;
        const lineTotal = (quantity * unitCost).toFixed(2);
        $('#lineTotal-' + productId).text(lineTotal);
    }

    function editProduct(productId) {
        const $row = $(`tr[data-product-id='${productId}']`);
        const quantity = parseFloat($row.find('.quantity-input').val()) || 0;
        const unitCost = parseFloat($row.find('.unitcost-input').val()) || 0;

        $.ajax({
            url: '@Url.Action("UpdateProductMapping", "PurchaseOrder")',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                SupplierId: @supplierId,
                ProductId: productId,
                QuantityToOrder: quantity,
                UnitCost: unitCost,
                LineTotal: quantity * unitCost
            }),
            success: function (response) {
                if (response.success) {
                    alert(response.message);
                    $('#lineTotal-' + productId).text(response.lineTotal.toFixed(2));
                } else {
                    alert(response.message);
                }
            }
        });
    }

    function deleteProduct(productId) {
        const $row = $(`tr[data-product-id='${productId}']`);
        $.ajax({
            url: '@Url.Action("DeleteProductMapping", "PurchaseOrder")',
            method: 'POST',
            data: {
                productId: productId,
                supplierId: @supplierId
            },
            success: function (response) {
                if (response.success) {
                    $row.remove();
                    alert(response.message);
                } else {
                    alert(response.message);
                }
            }
        });
    }

    $('#addProductsButton').click(function () {
        const url = '@Url.Action("AddProductPopup", "PurchaseOrder")' + '?supplierId=' + @supplierId;
        window.open(url, '_blank', 'width=1000,height=700,scrollbars=yes,resizable=yes');
    });

    $('#saveCentralPurchaseOrder').click(function () {
        let totalAmount = 0;
        let products = [];

        $('#productsTableBody tr').each(function () {
            const productId = $(this).data('product-id');
            const quantity = parseFloat($(this).find('.quantity-input').val()) || 0;
            const unitCost = parseFloat($(this).find('.unitcost-input').val()) || 0;
            const lineTotal = quantity * unitCost;
            totalAmount += lineTotal;

            products.push({
                ProductId: productId,
                QuantityToOrder: quantity,
                UnitCost: unitCost
            });
        });

        $.ajax({
            url: '@Url.Action("SavePurchaseOrder", "PurchaseOrder")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                SupplierName: '@supplierName',
                TotalAmount: totalAmount,
                Products: products
            }),
            success: function (response) {
                if (response.success) {
                    alert('Purchase order saved and product stocks updated.');
                    location.reload();
                } else {
                    alert('Failed to save purchase order.');
                }
            },
            error: function () {
                alert('An error occurred while saving the purchase order.');
            }
        });
    });
</script>
