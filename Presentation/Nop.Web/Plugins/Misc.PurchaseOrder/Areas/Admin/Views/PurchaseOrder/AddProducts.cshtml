@model IEnumerable<SelectedProductModel>

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewBag.PageTitle = T("Admin.Catalog.Products.AddProducts").Text;
    NopHtml.SetActiveMenuItemSystemName("Suppliers");

    var supplierId = Model.FirstOrDefault()?.SupplierId ?? 0;
    var supplierName = Model.FirstOrDefault()?.SupplierName ?? "";
}

<div class="card-body">
    <p>@T("Admin.Catalog.Products.SelectProductsForSupplier").Text</p>

    <div class="mb-3">
        <button type="button" id="addProductsButton" class="btn btn-primary">
            <i class="fas fa-plus"></i> @T("Admin.Common.Add").Text
        </button>
    </div>

    <div id="productsContainer">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>@T("Admin.Catalog.Products.Name").Text</th>
                    <th>@T("Admin.Catalog.Products.SKU").Text</th>
                    <th>@T("Admin.Catalog.Products.CurrentStock").Text</th>
                    <th>@T("Admin.Catalog.Products.QuantityToOrder").Text</th>
                    <th>@T("Admin.Catalog.Products.UnitCost").Text</th>
                    <th>@T("Admin.Catalog.Products.LineTotal").Text</th>
                    <th>@T("Admin.Common.Actions").Text</th>
                </tr>
            </thead>
            <tbody id="productsTableBody">
                @foreach (var product in Model)
                {
                    <tr data-product-id="@product.ProductId">
                        <td>@product.ProductName</td>
                        <td>@product.SKU</td>
                        <td>@product.CurrentStock</td>
                        <td>
                            <input type="number" class="form-control quantity-input" value="@product.QuantityToOrder"
                                   onchange="updateLineTotal(this)" data-product-id="@product.ProductId" />
                        </td>
                        <td>
                            <input type="number" class="form-control unitcost-input" value="@product.UnitCost"
                                   onchange="updateLineTotal(this)" data-product-id="@product.ProductId" />
                        </td>
                        <td>
                            <span id="lineTotal-@product.ProductId">@product.LineTotal.ToString("F2")</span>
                        </td>
                        <td>
                            <button class="btn btn-primary" onclick="editProduct(@product.ProductId)">
                                @T("Admin.Common.Edit").Text
                            </button>
                            <button class="btn btn-danger" onclick="deleteProduct(@product.ProductId)">
                                @T("Admin.Common.Delete").Text
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="mt-4">
        <button class="btn btn-success" id="saveCentralPurchaseOrder">
            <i class="fas fa-save"></i> @T("Admin.Common.Save").Text
        </button>
    </div>
</div>

<script>
    const supplierId = @supplierId;
    const supplierName = '@supplierName';

    function updateLineTotal(input) {
        const $row = $(input).closest('tr');
        const productId = $(input).data('product-id');
        const quantity = parseFloat($row.find('.quantity-input').val()) || 0;
        const unitCost = parseFloat($row.find('.unitcost-input').val()) || 0;
        const lineTotal = (quantity * unitCost).toFixed(2);
        $('#lineTotal-' + productId).text(lineTotal);
    }

    function editProduct(productId) {
        const $row = $(`tr[data-product-id='${productId}']`);
        const quantity = parseInt($row.find('.quantity-input').val()) || 0;
        const unitCost = parseFloat($row.find('.unitcost-input').val()) || 0;

        $.ajax({
            url: '@Url.Action("UpdateProductMapping", "PurchaseOrder")',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                SupplierId: supplierId,
                ProductId: productId,
                QuantityToOrder: quantity,
                UnitCost: unitCost,
                LineTotal: quantity * unitCost
            }),
            success: function (response) {
                if (response.success) {
                    $('#lineTotal-' + productId).text(response.lineTotal);
                    alert(response.message);
                } else {
                    alert(response.message);
                }
            }
        });
    }

    function deleteProduct(productId) {
        const $row = $(`tr[data-product-id='${productId}']`);
        $.ajax({
            url: '@Url.Action("DeleteProductMapping", "PurchaseOrder")',
            method: 'POST',
            data: { productId: productId, supplierId: supplierId },
            success: function (response) {
                if (response.success) {
                    $row.remove();
                    alert(response.message);
                } else {
                    alert(response.message);
                }
            }
        });
    }

    $('#addProductsButton').click(function () {
        const url = '@Url.Action("AddProductPopup", "PurchaseOrder")' + '?supplierId=' + supplierId;
        window.open(url, '_blank', 'width=1000,height=700,scrollbars=yes,resizable=yes');
    });

    $('#saveCentralPurchaseOrder').click(function () {
        let totalAmount = 0;
        $('#productsTableBody tr').each(function () {
            const quantity = parseFloat($(this).find('.quantity-input').val()) || 0;
            const unitCost = parseFloat($(this).find('.unitcost-input').val()) || 0;
            totalAmount += quantity * unitCost;
        });

        $.ajax({
            url: '@Url.Action("SavePurchaseOrder", "PurchaseOrder")',
            type: 'POST',
            data: {
                supplierName: supplierName,
                totalAmount: totalAmount
            },
            success: function (response) {
                if (response.success) {
                    alert('Purchase order saved successfully.');
                } else {
                    alert('Failed to save purchase order.');
                }
            },
            error: function () {
                alert('An error occurred while saving the purchase order.');
            }
        });
    });
</script>
