@using Nop.Plugin.Misc.PurchaseOrder.Areas.Admin.Models.AddProductPopup
@model AddProductPopupSearchModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminPopupLayout.cshtml";
    ViewBag.PageTitle = T("Admin.Catalog.Products.RelatedProducts.AddNew").Text;
}

<style>
    .table th, .table td {
        text-align: center !important;
        vertical-align: middle !important;
    }
</style>

<form asp-controller="PurchaseOrder" asp-action="AddProductPopup" asp-route-supplierId="@Model.SupplierId" id="popup-form">
    <div class="content-header clearfix">
        <h1 class="float-left">@T("Admin.Catalog.Products.RelatedProducts.AddNew")</h1>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row opened" data-hideAttribute="">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-magnifying-glass" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-up" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body opened">
                                <div class="row justify-content-center">
                                    <div class="col-md-6">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="ProductName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="ProductName" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" asp-for="SupplierId" />

                                <div class="row justify-content-center">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-products" class="btn btn-primary btn-search">
                                            <i class="fas fa-magnifying-glass"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                       {
                           Name = "products-popup-grid",
                           UrlRead = new DataUrl("AddProductPopup", "PurchaseOrder"),
                           SearchButtonId = "search-products",
                           Length = Model.PageSize,
                           LengthMenu = Model.AvailablePageSizes,
                           Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.ProductName)),
                            new FilterParameter(nameof(Model.SupplierId))
                            
                            },
                           ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(AddProductPopupModel.ProductId))
                            {
                            Render = new RenderCustom("renderCheckbox"),
                            Width = "50"
                            },
                            new ColumnProperty(nameof(AddProductPopupModel.ProductName))
                            {
                            Title = T("Admin.Catalog.Products.Fields.Name").Text,
                            Width = "250"
                            },
                            new ColumnProperty(nameof(AddProductPopupModel.Published))
                            {
                            Title = T("Admin.Catalog.Products.Fields.Published").Text,
                            Render = new RenderBoolean(),
                            Width = "100"
                            }
                            }
                       })
                        </div>
                        <div class="card-footer">
                            <div class="text-center">
                                <button type="button" class="btn btn-primary" id="saveSelectedProductsBtn">
                                    <i class="far fa-save"></i> @T("Admin.Common.Save")
                                </button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
</form>


<script>
    function renderCheckbox(data, type, row, meta) {
        return `<input type="checkbox" name="selectedProducts" value="${data}" />`;
    }

    $(document).ready(function () {
        $('#saveSelectedProductsBtn').click(function () {
            var selectedProductIds = [];
            $('input[name="selectedProducts"]:checked').each(function () {
                selectedProductIds.push(parseInt($(this).val()));
            });

            if (selectedProductIds.length === 0) {
                window.close();
                return;
            }

            var supplierId = parseInt('@Model.SupplierId');

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveSelectedProductsFromPopup", "PurchaseOrder")',
                data: JSON.stringify({
                    supplierId: supplierId,
                    selectedProductIds: selectedProductIds
                }),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    if (response.success) {
                        if (window.opener && !window.opener.closed) {
                            window.opener.location.reload();
                        }
                        window.close();
                    } else {
                        alert(response.message || "Unexpected error.");
                    }
                },
                error: function () {
                    alert('Error while saving products.');
                }
            });
        });
    });
</script>

